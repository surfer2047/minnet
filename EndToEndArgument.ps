%!PS-Adobe-3.0
%%Title: (Endtoend.wd)
%%Creator: (Microsoft Word: LaserWriter 8 B1-8.3.2)
%%CreationDate: (9:42 pm Wednesday, September 24, 1997)
%%For: (George Coulouris)
%%Pages: 10
%%DocumentFonts: Helvetica Helvetica-Bold Times-Roman Times-Italic
%%DocumentNeededFonts: Helvetica Helvetica-Bold Times-Roman Times-Italic
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: Default 595 842 0 () ()
%ADO_ImageableArea: 29 31 567 812
%%EndComments
userdict begin/dscInfo 5 dict dup begin
/Title(Endtoend.wd)def
/Creator(Microsoft Word: LaserWriter 8 B1-8.3.2)def
/CreationDate(9:42 pm Wednesday, September 24, 1997)def
/For(George Coulouris)def
/Pages 10 def
end def end
/md 161 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 83 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F1/setgray ld
/:F/setrgbcolor ld
/:F4/setcmykcolor where
{
pop
/setcmykcolor ld
}{
{
3
{
dup
3 -1 roll add
dup 1 gt{pop 1}if
1 exch sub
4 1 roll
}repeat
pop
setrgbcolor
}bd
}ifelse
/:Fx
{
counttomark
{0{G}0{:F}{:F4}}
exch get
exec
pop
}bd
/:rg{/DeviceRGB :ss}bd
/:sc{$cs :ss}bd
/:dc{/$cs xdf}bd
/:sgl{}def
/:dr{}bd
/:fCRD{pop}bd
/:ckcs{}bd
/:ss{/$c xdf}bd
/$cs Z
%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
countdictstack[{
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *InputSlot Cassette

%%EndFeature
}featurecleanup
(George Coulouris)setjob
/mT[1 0 0 -1 29 812]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-Bold
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Italic
/f0_1/Helvetica
:mre
/f0_12 f0_1 12 scf
/f0_10 f0_1 10 scf
/f1_1/Helvetica-Bold
:mre
/f1_18 f1_1 18 scf
/f1_16 f1_1 16 scf
/f1_14 f1_1 14 scf
/f2_1/Times-Roman
:mre
/f2_12 f2_1 12 scf
/f2_10 f2_1 10 scf
/f2_9 f2_1 9 scf
/f3_1/Times-Italic
:mre
/f3_12 f3_1 12 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(George Coulouris; page: 1 of 10)setjob
%%EndPageSetup
gS 0 0 538 781 rC
43 23 :M
f0_10 sf
(SALTZER ET AL.)S
181 23 :M
(End-to-End Arguments in System Design)S
487 23 :M
(1)S
-4125 -4125 -1 1 -4123 -4125 1 -4125 -4126 @a
41 30.24 -.24 .24 514.24 30 .24 41 30 @a
72 85 :M
f1_18 sf
(END-TO-END ARGUMENTS IN SYSTEM DESIGN)S
132 115 :M
f1_16 sf
(J.H. Saltzer, D.P. Reed and D.D. Clark)S
416 112 :M
(*)S
127 143 :M
(M.I.T. Laboratory for Computer Science)S
61 201 :M
f2_12 sf
.26 .026(This paper presents a design principle that helps guide placement of functions among the)J
61 215 :M
.135 .013(modules of a distributed computer system. The principle, called the end-to-end argument,)J
61 229 :M
1.176 .118(suggests that functions placed at low levels of a system may be redundant or of little)J
61 243 :M
1.921 .192(value when compared with the cost of providing them at that low level. Examples)J
61 257 :M
1.242 .124(discussed in the paper include bit error recovery, security using encryption, duplicate)J
61 271 :M
-.008(message suppression, recovery from system crashes, and delivery acknowledgement. Low)A
61 285 :M
3.37 .337(level mechanisms to support these functions are justified only as performance)J
61 299 :M
(enhancements.)S
43 344 :M
f1_14 sf
(Introduction)S
43 363 :M
f2_12 sf
2.168 .217(Choosing the proper boundaries between functions is perhaps the primary activity of the)J
43 377 :M
1.089 .109(computer system designer. Design principles that provide guidance in this choice of function)J
43 391 :M
.854 .085(placement are among the most important tools of a system designer. This paper discusses one)J
43 405 :M
1.011 .101(class of function placement argument that has been used for many years with neither explicit)J
43 419 :M
-.007(recognition nor much conviction. However, the emergence of the data communication network as)A
43 433 :M
-.004(a computer system component has sharpened this line of function placement argument by making)A
43 447 :M
1.371 .137(more apparent the situations in which and reasons why it applies. This paper articulates the)J
43 461 :M
.188 .019(argument explicitly, so as to examine its nature and to see how general it really is. The argument)J
43 475 :M
.811 .081(appeals to application requirements, and provides a rationale for moving function upward in a)J
43 489 :M
1.149 .115(layered system, closer to the application that uses the function. We begin by considering the)J
43 503 :M
(communication network version of the argument.)S
43 522 :M
.977 .098(In a system that includes communications, one usually draws a modular boundary around the)J
43 536 :M
1.087 .109(communication subsystem and defines a firm interface between it and the rest of the system.)J
43 550 :M
1.256 .126(When doing so, it becomes apparent that there is a list of functions each of which might be)J
43 564 :M
.728 .073(implemented in any of several ways: by the communication subsystem, by its client, as a joint)J
-4125 -4125 -1 1 -4123 -4125 1 -4125 -4126 @a
43 586.24 -.24 .24 186.24 586 .24 43 586 @a
43 604 :M
f2_9 sf
(*)S
48 607 :M
f2_10 sf
1.707 .171( )J
61 607 :M
.957 .096(Authors' addresses: J.H. Saltzer and D.D. Clark, M.I.T. Laboratory for Computer Science, 545 Technology)J
61 619 :M
1.888 .189(Square, Cambridge, Massachusetts 02139.:  D.P. Reed, Software Arts, Inc., 27 Mica Lane, Wellesley,)J
61 631 :M
(Massachusetts  02181.)S
61 646 :M
.942 .094(This research was supported in part by the Advanced Research Projects Agency of the U.S. Department of)J
61 658 :M
(Defense and monitored by the Office of Naval Research under contract number N00014-75-C-0661.)S
61 673 :M
.094 .009(Revised version of a paper from the Second International Conference on Distributed Computing Systems, Paris,)J
61 685 :M
1.707 .171(France, April 8-10, 1981, pp. 509-512.:  Copyright 1981 by The Institute of Electrical and Electronics)J
61 697 :M
(Engineers, Inc.  Reprinted with permission.)S
61 712 :M
(Published in ACM Transactions in Computer Systems 2, 4, November, 1984, pages 277-288.)S
61 727 :M
.116 .012(Reprinted in Craig Partridge, editor Innovations in internetworking.  Artech House, Norwood, MA, 1988, pages)J
61 739 :M
.079 .008(195-206. ISBN 0-89006-337-0.  Also scheduled to be reprinted in Amit Bhargava, editor.  Integrated broadband)J
61 751 :M
(networks.  Artech House, Boston, 1991. ISBN 0-89006-483-0.)S
61 766 :M
(Scribe/FinalWord source: http://web.mit.edu/Saltzer/www/publications/)S
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(George Coulouris; page: 2 of 10)setjob
%%EndPageSetup
-29 -30 :T
gS 29 30 538 781 rC
72 53 :M
f0_10 sf
(SALTZER ET AL.)S
210 53 :M
(End-to-End Arguments in System Design)S
516 53 :M
(2)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
70 60.24 -.24 .24 543.24 60 .24 70 60 @a
72 81 :M
f2_12 sf
.454 .045(venture, or perhaps redundantly, each doing its own version. In reasoning about this choice, the)J
72 95 :M
(requirements of the application provide the basis for a class of arguments, which go as follows:)S
90 114 :M
1.325 .133(The function in question can completely and correctly be implemented only with the)J
90 128 :M
.699 .07(knowledge and help of the application standing at the end points of the communication)J
90 142 :M
.425 .043(system. Therefore, providing that questioned function as a feature of the communication)J
90 156 :M
.432 .043(system itself is not possible. \(Sometimes an incomplete version of the function provided)J
90 170 :M
(by the communication system may be useful as a performance enhancement.\))S
72 189 :M
2.205 .22(We call this line of reasoning against low-level function implementation the "end-to-end)J
72 203 :M
.633 .063(argument." The following sections examine the end-to-end argument in detail, first with a case)J
72 217 :M
2.045 .204(study of a typical example in which it is used \320 the function in question is reliable data)J
72 231 :M
.315 .032(transmission \320 and then by exhibiting the range of functions to which the same argument can be)J
72 245 :M
.059 .006(applied. For the case of the data communication system, this range includes encryption, duplicate)J
72 259 :M
1.02 .102(message detection, message sequencing, guaranteed message delivery, detecting host crashes,)J
72 273 :M
.356 .036(and delivery receipts. In a broader context the argument seems to apply to many other functions)J
72 287 :M
.791 .079(of a computer operating system, including its file system. Examination of this broader context)J
72 301 :M
(will be easier if we first consider the more specific data communication context, however.)S
72 327 :M
f0_12 sf
(End-to-end caretaking)S
72 346 :M
f2_12 sf
1.334 .133(Consider the problem of "careful file transfer." A file is stored by a file system, in the disk)J
72 360 :M
.54 .054(storage of computer A. Computer A is linked by a data communication network with computer)J
72 374 :M
.084 .008(B, which also has a file system and a disk store. The object is to move the file from computer A's)J
72 388 :M
.158 .016(storage to computer B's storage without damage, in the face of knowledge that failures can occur)J
72 402 :M
.156 .016(at various points along the way. The application program in this case is the file transfer program,)J
72 416 :M
.058 .006(part of which runs at host A and part at host B. In order to discuss the possible threats to the file's)J
72 430 :M
(integrity in this transaction, let us assume that the following specific steps are involved:)S
72 448 :M
(1.)S
94 448 :M
.452 .045(At host A the file transfer program calls upon the file system to read the file from the disk,)J
94 462 :M
.127 .013(where it resides on several tracks, and the file system passes it to the file transfer program in)J
94 476 :M
(fixed-size blocks chosen to be disk-format independent.)S
72 494 :M
(2.)S
94 494 :M
.291 .029(Also at host A the file transfer program asks the data communication system to transmit the)J
94 508 :M
.943 .094(file using some communication protocol that involves splitting the data into packets. The)J
94 522 :M
(packet size is typically different from the file block size and the disk track size.)S
72 540 :M
(3.)S
94 540 :M
(The data communication network moves the packets from computer A to computer B.)S
72 558 :M
(4.)S
94 558 :M
.139 .014(At host B a data communication program removes the packets from the data communication)J
94 572 :M
.197 .02(protocol and hands the contained data on to a second part of the file transfer application, the)J
94 586 :M
(part that operates within host B.)S
72 604 :M
(5.)S
94 604 :M
.037 .004(At host B, the file transfer program asks the file system to write the received data on the disk)J
94 618 :M
(of host B.)S
72 637 :M
(With this model of the steps involved, the following are some of the threats to the transaction that)S
72 651 :M
(a careful designer might be concerned about:)S
72 669 :M
(1.)S
94 669 :M
.131 .013(The file, though originally written correctly onto the disk at host A, if read now may contain)J
94 683 :M
(incorrect data, perhaps because of hardware faults in the disk storage system.)S
72 701 :M
(2.)S
94 701 :M
.174 .017(The software of the file system, the file transfer program, or the data communication system)J
94 715 :M
.479 .048(might make a mistake in buffering and copying the data of the file, either at host A or host)J
94 729 :M
(B.)S
72 747 :M
(3.)S
94 747 :M
.945 .094(The hardware processor or its local memory might have a transient error while doing the)J
94 761 :M
(buffering and copying, either at host A or host B.)S
72 779 :M
(4.)S
94 779 :M
.853 .085(The communication system might drop or change the bits in a packet, or lose a packet or)J
94 793 :M
(deliver a packet more than once.)S
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(George Coulouris; page: 3 of 10)setjob
%%EndPageSetup
-29 -30 :T
gS 29 30 538 781 rC
72 53 :M
f0_10 sf
(SALTZER ET AL.)S
210 53 :M
(End-to-End Arguments in System Design)S
516 53 :M
(3)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
70 60.24 -.24 .24 543.24 60 .24 70 60 @a
72 81 :M
f2_12 sf
(5.)S
94 81 :M
.204 .02(Either of the hosts may crash part way through the transaction after performing an unknown)J
94 95 :M
(amount \(perhaps all\) of the transaction.)S
72 114 :M
.726 .073(How would a careful file transfer application then cope with this list of threats? One approach)J
72 128 :M
.523 .052(might be to reinforce each of the steps along the way using duplicate copies, timeout and retry,)J
72 142 :M
-.002(carefully located redundancy for error detection, crash recovery, etc. The goal would be to reduce)A
72 156 :M
1.241 .124(the probability of each of the individual threats to an acceptably small value. Unfortunately,)J
72 170 :M
1.898 .19(systematic countering of threat two requires writing correct programs, which task is quite)J
72 184 :M
.271 .027(difficult, and not all the programs that must be correct are written by the file transfer application)J
72 198 :M
.848 .085(programmer. If we assume further that all these threats are relatively low in probability \320 low)J
72 212 :M
.929 .093(enough that the system allows useful work to be accomplished \320 brute force countermeasures)J
72 226 :M
(such as doing everything three times appear uneconomical.)S
72 245 :M
.613 .061(The alternate approach might be called "end-to-end check and retry". Suppose that as an aid to)J
72 259 :M
(coping with threat number one, stored with each file is a checksum that has sufficient redundancy)S
72 273 :M
1.069 .107(to reduce the chance of an undetected error in the file to an acceptably negligible value. The)J
72 287 :M
.208 .021(application program follows the simple steps above in transferring the file from A to B. Then, as)J
72 301 :M
1.693 .169(a final additional step, the part of the file transfer application residing in host B reads the)J
72 315 :M
1.078 .108(transferred file copy back from its disk storage system into its own memory, recalculates the)J
72 329 :M
.6 .06(checksum, and sends this value back to host A, where it is compared with the checksum of the)J
72 343 :M
-.009(original. Only if the two checksums agree does the file transfer application declare the transaction)A
72 357 :M
.156 .016(committed. If the comparison fails, something went wrong, and a retry from the beginning might)J
72 371 :M
(be attempted.)S
72 390 :M
.322 .032(If failures really are fairly rare, this technique will normally work on the first try; occasionally a)J
72 404 :M
.184 .018(second or even third try might be required; one would probably consider two or more failures on)J
72 418 :M
(the same file transfer attempt as indicating that some part of the system is in need of repair.)S
72 437 :M
1.58 .158(Now let us consider the usefulness of a common proposal, namely that the communication)J
72 451 :M
1.012 .101(system provide, internally, a guarantee of reliable data transmission. It might accomplish this)J
72 465 :M
.207 .021(guarantee by providing selective redundancy in the form of packet checksums, sequence number)J
72 479 :M
.941 .094(checking, and internal retry mechanisms, for example. With sufficient care, the probability of)J
72 493 :M
.668 .067(undetected bit errors can be reduced to any desirable level. The question is whether or not this)J
72 507 :M
.063 .006(attempt to be helpful on the part of the communication system is useful to the careful file transfer)J
72 521 :M
(application.)S
72 540 :M
1.049 .105(The answer is that threat number four may have been eliminated, but the careful file transfer)J
72 554 :M
.052 .005(application must still counter the remaining threats, so it should still provide its own retries based)J
72 568 :M
1.738 .174(on an end-to-end checksum of the file. And if it does so, the extra effort expended in the)J
72 582 :M
.493 .049(communication system to provide a guarantee of reliable data transmission is only reducing the)J
72 596 :M
.148 .015(frequency of retries by the file transfer application; it has no effect on inevitability or correctness)J
72 610 :M
.528 .053(of the outcome, since correct file transmission is assured by the end-to-end checksum and retry)J
72 624 :M
(whether or not the data transmission system is especially reliable.)S
72 643 :M
-.003(Thus the argument: in order to achieve careful file transfer, the application program that performs)A
72 657 :M
.423 .042(the transfer must supply a file-transfer-specific, end-to-end reliability guarantee \320 in this case, a)J
72 671 :M
.649 .065(checksum to detect failures and a retry/commit plan. For the data communication system to go)J
72 685 :M
1.736 .174(out of its way to be extraordinarily reliable does not reduce the burden on the application)J
72 699 :M
(program to ensure reliability.)S
72 725 :M
f0_12 sf
(A too-real example)S
72 744 :M
f2_12 sf
.656 .066(An interesting example of the pitfalls that one can encounter turned up recently at M.I.T.: One)J
72 758 :M
.032 .003(network system involving several local networks connected by gateways used a packet checksum)J
72 772 :M
.583 .058(on each hop from one gateway to the next, on the assumption that the primary threat to correct)J
72 786 :M
.561 .056(communication was corruption of bits during transmission. Application programmers, aware of)J
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(George Coulouris; page: 4 of 10)setjob
%%EndPageSetup
-29 -30 :T
gS 29 30 538 781 rC
72 53 :M
f0_10 sf
(SALTZER ET AL.)S
210 53 :M
(End-to-End Arguments in System Design)S
516 53 :M
(4)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
70 60.24 -.24 .24 543.24 60 .24 70 60 @a
72 81 :M
f2_12 sf
.508 .051(this checksum, assumed that the network was providing reliable transmission, without realizing)J
72 95 :M
.545 .054(that the transmitted data was unprotected while stored in each gateway. One gateway computer)J
72 109 :M
.315 .031(developed a transient error in which while copying data from an input to an output buffer a byte)J
72 123 :M
.939 .094(pair was interchanged, with a frequency of about one such interchange in every million bytes)J
72 137 :M
.703 .07(passed. Over a period of time many of the source files of an operating system were repeatedly)J
72 151 :M
1.028 .103(transferred through the defective gateway. Some of these source files were corrupted by byte)J
72 165 :M
2.263 .226(exchanges, and their owners were forced to the ultimate end-to-end error check: manual)J
72 179 :M
(comparison with and correction from old listings.)S
72 205 :M
f0_12 sf
(Performance aspects)S
72 224 :M
f2_12 sf
1.241 .124(It would be too simplistic to conclude that the lower levels should play no part in obtaining)J
72 238 :M
.645 .064(reliability, however. Consider a network that is somewhat unreliable, dropping one message of)J
72 252 :M
.642 .064(each hundred messages sent. The simple strategy outlined above, transmitting the file and then)J
72 266 :M
.051 .005(checking to see that the file arrived correctly, would perform more poorly as the length of the file)J
72 280 :M
.471 .047(increases. The probability that all packets of a file arrive correctly decreases exponentially with)J
72 294 :M
1.343 .134(the file length, and thus the expected time to transmit the file grows exponentially with file)J
72 308 :M
1.951 .195(length. Clearly, some effort at the lower levels to improve network reliability can have a)J
72 322 :M
.326 .033(significant effect on application performance. But the key idea here is that the lower levels need)J
72 336 :M
(not provide "perfect" reliability.)S
72 355 :M
.312 .031(Thus the amount of effort to put into reliability measures within the data communication system)J
72 369 :M
1.831 .183(is seen to be an engineering tradeoff based on performance, rather than a requirement for)J
72 383 :M
.374 .037(correctness. Note that performance has several aspects here. If the communication system is too)J
72 397 :M
1.919 .192(unreliable, the file transfer application performance will suffer because of frequent retries)J
72 411 :M
.844 .084(following failures of its end-to-end checksum. If the communication system is beefed up with)J
72 425 :M
1.919 .192(internal reliability measures, those measures have a performance cost, too, in the form of)J
72 439 :M
.543 .054(bandwidth lost to redundant data and delay added by waiting for internal consistency checks to)J
72 453 :M
.207 .021(complete before delivering the data. There is little reason to push in this direction very far, when)J
72 467 :M
-.004(it is considered that )A
169 467 :M
f3_12 sf
-.003(the end-to-end check of the file transfer application must still be implemented)A
72 481 :M
1.722 .172(no matter how reliable the communication system becomes)J
377 481 :M
f2_12 sf
1.718 .172(. The "proper" tradeoff requires)J
72 495 :M
.374 .037(careful thought; for example one might start by designing the communication system to provide)J
72 509 :M
-.006(just the reliability that comes with little cost and engineering effort, and then evaluate the residual)A
72 523 :M
.959 .096(error level to insure that it is consistent with an acceptable retry frequency at the file transfer)J
72 537 :M
1.207 .121(level. It is probably not important to strive for a negligible error rate at any point below the)J
72 551 :M
(application level.)S
72 570 :M
.297 .03(Using performance to justify placing functions in a low-level subsystem must be done carefully.)J
72 584 :M
.285 .028(Sometimes, by examining the problem thoroughly, the same or better performance enhancement)J
72 598 :M
.388 .039(can be achieved at the high level. Performing a function at a low level may be more efficient, if)J
72 612 :M
.029 .003(the function can be performed with a minimum perturbation of the machinery already included in)J
72 626 :M
1.614 .161(the low-level subsystem, but just the opposite situation can occur \320 that is, performing the)J
72 640 :M
2.016 .202(function at the lower level may cost more \320 for two reasons. First, since the lower level)J
72 654 :M
.211 .021(subsystem is common to many applications, those applications that do not need the function will)J
72 668 :M
.85 .085(pay for it anyway. Second, the low-level subsystem may not have as much information as the)J
72 682 :M
(higher levels, so it cannot do the job as efficiently.)S
72 701 :M
.135 .014(Frequently, the performance tradeoff is quite complex. Consider again the careful file transfer on)J
72 715 :M
.541 .054(an unreliable network. The usual technique for increasing packet reliability is some sort of per)J
537 715 :M
(-)S
72 729 :M
1.478 .148(packet error check with a retry protocol. This mechanism can be implemented either in the)J
72 743 :M
.252 .025(communication subsystem or in the careful file transfer application. For example, the receiver in)J
72 757 :M
.338 .034(the careful file transfer can periodically compute the checksum of the portion of the file thus far)J
72 771 :M
.573 .057(received and transmit this back to the sender. The sender can then restart by retransmitting any)J
72 785 :M
(portion that arrived in error.)S
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(George Coulouris; page: 5 of 10)setjob
%%EndPageSetup
-29 -30 :T
gS 29 30 538 781 rC
72 53 :M
f0_10 sf
(SALTZER ET AL.)S
210 53 :M
(End-to-End Arguments in System Design)S
516 53 :M
(5)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
70 60.24 -.24 .24 543.24 60 .24 70 60 @a
72 81 :M
f2_12 sf
.202 .02(The end-to-end argument does not tell us where to put the early checks, since either layer can do)J
72 95 :M
.079 .008(this performance-enhancement job. Placing the early retry protocol in the file transfer application)J
72 109 :M
.882 .088(simplifies the communication system, but may increase overall cost, since the communication)J
72 123 :M
.311 .031(system is shared by other applications and each application must now provide its own reliability)J
72 137 :M
1.977 .198(enhancement. Placing the early retry protocol in the communication system may be more)J
72 151 :M
.069 .007(efficient, since it may be performed inside the network on a hop-by-hop basis, reducing the delay)J
72 165 :M
.549 .055(involved in correcting a failure. At the same time, there may be some application that finds the)J
72 179 :M
.394 .039(cost of the enhancement is not worth the result but it now has no choice in the matter)J
490 176 :M
f2_9 sf
(*)S
495 179 :M
f2_12 sf
.455 .045( . A great)J
72 193 :M
(deal of information about system implementation is needed to make this choice intelligently.)S
72 219 :M
f1_14 sf
(Other examples of the end-to-end argument)S
72 245 :M
f0_12 sf
(Delivery guarantees)S
72 264 :M
f2_12 sf
.553 .055(The basic argument that a lower-level subsystem that supports a distributed application may be)J
72 278 :M
1.091 .109(wasting its effort providing a function that must by nature be implemented at the application)J
72 292 :M
.789 .079(level anyway can be applied to a variety of functions in addition to reliable data transmission.)J
72 306 :M
.413 .041(Perhaps the oldest and most widely known form of the argument concerns acknowledgement of)J
72 320 :M
.152 .015(delivery. A data communication network can easily return an acknowledgement to the sender for)J
72 334 :M
.335 .034(every message delivered to a recipient. The ARPANET, for example, returns a packet known as)J
72 348 :M
2.418 .242("Request For Next Message" \(RFNM\)[1] whenever it delivers a message. Although this)J
72 362 :M
.498 .05(acknowledgement may be useful within the network as a form of congestion control \(originally)J
72 376 :M
.734 .073(the ARPANET refused to accept another message to the same target until the previous RFNM)J
72 390 :M
.892 .089(had returned\) it was never found to be very helpful to applications using the ARPANET. The)J
72 404 :M
1.208 .121(reason is that knowing for sure that the message was delivered to the target host is not very)J
72 418 :M
1.075 .107(important. What the application wants to know is whether or not the target host acted on the)J
72 432 :M
.405 .041(message; all manner of disaster might have struck after message delivery but before completion)J
72 446 :M
.206 .021(of the action requested by the message. The acknowledgement that is really desired is an end-to-)J
72 460 :M
(end one, which can be originated only by the target application \320 "I did it", or "I didn't.")S
72 479 :M
2.641 .264(Another strategy for obtaining immediate acknowledgements is to make the target host)J
72 493 :M
.282 .028(sophisticated enough that when it accepts delivery of a message it also accepts responsibility for)J
72 507 :M
2.059 .206(guaranteeing that the message is acted upon by the target application. This approach can)J
72 521 :M
.1 .01(eliminate the need for an end-to-end acknowledgement in some, but not all applications. An end-)J
72 535 :M
.912 .091(to-end acknowledgement is still required for applications in which the action requested of the)J
72 549 :M
.816 .082(target host should be done only if similar actions requested of other hosts are successful. This)J
72 563 :M
.232 .023(kind of application requires a two-phase commit protocol[5,10,15], which is a sophisticated end-)J
72 577 :M
1.653 .165(to-end acknowledgement. Also, if the target application may either fail or refuse to do the)J
72 591 :M
1.117 .112(requested action, and thus a negative acknowledgement is a possible outcome, an end-to-end)J
72 605 :M
(acknowledgement may still be a requirement.)S
72 631 :M
f0_12 sf
(Secure transmission of data)S
72 650 :M
f2_12 sf
1.029 .103(Another area in which an end-to-end argument can be applied is that of data encryption. The)J
72 664 :M
1.882 .188(argument here is threefold. First, if the data transmission system performs encryption and)J
72 678 :M
.326 .033(decryption, it must be trusted to manage securely the required encryption keys. Second, the data)J
72 692 :M
.492 .049(will be in the clear and thus vulnerable as it passes into the target node and is fanned out to the)J
72 706 :M
.047 .005(target application. Third, the )J
f3_12 sf
.012(authenticity)A
269 706 :M
f2_12 sf
.076 .008( of the message must still be checked by the application.)J
72 720 :M
.398 .04(If the application performs end-to-end encryption, it obtains its required authentication check, it)J
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
72 763.24 -.24 .24 215.24 763 .24 72 763 @a
72 781 :M
f2_9 sf
(*)S
90 784 :M
f2_10 sf
.562 .056(For example, real time transmission of speech has tighter constraints on message delay than on bit-error rate.)J
90 796 :M
(Most retry schemes significantly increase the variability of delay.)S
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(George Coulouris; page: 6 of 10)setjob
%%EndPageSetup
-29 -30 :T
gS 29 30 538 781 rC
72 53 :M
f0_10 sf
(SALTZER ET AL.)S
210 53 :M
(End-to-End Arguments in System Design)S
516 53 :M
(6)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
70 60.24 -.24 .24 543.24 60 .24 70 60 @a
72 81 :M
f2_12 sf
2.011 .201(can handle key management to its satisfaction, and the data is never exposed outside the)J
72 95 :M
(application.)S
72 114 :M
1.327 .133(Thus, to satisfy the requirements of the application, there is no need for the communication)J
72 128 :M
.591 .059(subsystem to provide for automatic encryption of all traffic. Automatic encryption of all traffic)J
72 142 :M
.484 .048(by the communication subsystem may be called for, however, to ensure something else \320 that a)J
72 156 :M
.508 .051(misbehaving user or application program does not deliberately transmit information that should)J
72 170 :M
.866 .087(not be exposed. The automatic encryption of all data as it is put into the network is one more)J
72 184 :M
1.478 .148(firewall the system designer can use to ensure that information does not escape outside the)J
72 198 :M
.425 .043(system. Note however, that this is a different requirement from authenticating access rights of a)J
72 212 :M
3.147 .315(system user to specific parts of the data. This network-level encryption can be quite)J
72 226 :M
.725 .072(unsophisticated \320 the same key can be used by all hosts, with frequent changes of the key. No)J
72 240 :M
.72 .072(per-user keys complicate the key management problem. The use of encryption for application)J
537 240 :M
(-)S
72 254 :M
1.907 .191(level authentication and protection is complementary. Neither mechanism can satisfy both)J
72 268 :M
(requirements completely.)S
72 294 :M
f0_12 sf
(Duplicate message suppression)S
72 313 :M
f2_12 sf
.543 .054(A more sophisticated argument can be applied to duplicate message suppression. A property of)J
72 327 :M
.266 .027(some communication network designs is that a message or a part of a message may be delivered)J
72 341 :M
.079 .008(twice, typically as a result of time-out-triggered failure detection and retry mechanisms operating)J
72 355 :M
.591 .059(within the network. The network can provide the function of watching for and suppressing any)J
72 369 :M
1.038 .104(such duplicate messages, or it can simply deliver them. One might expect that an application)J
72 383 :M
.184 .018(would find it very troublesome to cope with a network that may deliver the same message twice;)J
72 397 :M
2.788 .279(indeed it is troublesome. Unfortunately, even if the network suppresses duplicates, the)J
72 411 :M
2.911 .291(application itself may accidentally originate duplicate requests, in its own failure/retry)J
72 425 :M
3.77 .377(procedures. These application level duplications look like different messages to the)J
72 439 :M
.942 .094(communication system, so it cannot suppress them; suppression must be accomplished by the)J
72 453 :M
(application itself with knowledge of how to detect its own duplicates.)S
72 472 :M
1.213 .121(A common example of duplicate suppression that must be handled at a high level is when a)J
72 486 :M
.408 .041(remote system user, puzzled by lack of response, initiates a new login to a time-sharing system.)J
72 500 :M
.971 .097(For another example, most communication applications involve a provision for coping with a)J
72 514 :M
.481 .048(system crash at one end of a multi-site transaction: reestablish the transaction when the crashed)J
72 528 :M
.371 .037(system comes up again. Unfortunately, reliable detection of a system crash is problematical: the)J
72 542 :M
.368 .037(problem may just be a lost or long-delayed acknowledgement. If so, the retried request is now a)J
72 556 :M
.733 .073(duplicate, which only the application can discover. Thus the end-to-end argument again: if the)J
72 570 :M
.838 .084(application level has to have a duplicate-suppressing mechanism anyway, that mechanism can)J
72 584 :M
.119 .012(also suppress any duplicates generated inside the communication network, so the function can be)J
72 598 :M
.209 .021(omitted from that lower level. The same basic reasoning applies to completely omitted messages)J
72 612 :M
(as well as to duplicated ones.)S
72 638 :M
f0_12 sf
(Guaranteeing FIFO message delivery)S
72 657 :M
f2_12 sf
.445 .044(Ensuring that messages arrive at the receiver in the same order they are sent is another function)J
72 671 :M
.331 .033(usually assigned to the communication subsystem. The mechanism usually used to achieve such)J
72 685 :M
.743 .074(first-in, first-out \(FIFO\) behavior guarantees FIFO ordering among messages sent on the same)J
72 699 :M
2.398 .24(virtual circuit. Messages sent along independent virtual circuits, or through intermediate)J
72 713 :M
.467 .047(processes outside the communication subsystem may arrive in an order different from the order)J
72 727 :M
.804 .08(sent. A distributed application in which one node can originate requests that initiate actions at)J
72 741 :M
.685 .069(several sites cannot take advantage of the FIFO ordering property to guarantee that the actions)J
72 755 :M
-.003(requested occur in the correct order. Instead, an independent mechanism at a higher level than the)A
72 769 :M
(communication subsystem must control the ordering of actions.)S
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(George Coulouris; page: 7 of 10)setjob
%%EndPageSetup
-29 -30 :T
gS 29 30 538 781 rC
72 53 :M
f0_10 sf
(SALTZER ET AL.)S
210 53 :M
(End-to-End Arguments in System Design)S
516 53 :M
(7)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
70 60.24 -.24 .24 543.24 60 .24 70 60 @a
72 82 :M
f0_12 sf
(Transaction management)S
72 101 :M
f2_12 sf
.076 .008(We have now applied the end-to-end argument in the construction of the SWALLOW distributed)J
72 115 :M
2.114 .211(data storage system[15], where it leads to significant reduction in overhead. SWALLOW)J
72 129 :M
.624 .062(provides data storage servers called repositories that can be used remotely to store and retrieve)J
72 143 :M
.553 .055(data. Accessing data at a repository is done by sending it a message specifying the object to be)J
72 157 :M
.229 .023(accessed, the version, and type of access \(read/write\), plus a value to be written if the access is a)J
72 171 :M
1.104 .11(write. The underlying message communication system does not suppress duplicate messages,)J
72 185 :M
.378 .038(since a\) the object identifier plus the version information suffices to detect duplicate writes, and)J
72 199 :M
-.006(b\) the effect of a duplicate read request message is only to generate a duplicate response, which is)A
72 213 :M
.172 .017(easily discarded by the originator. Consequently, the low-level message communication protocol)J
72 227 :M
(is significantly simplified.)S
72 246 :M
1.244 .124(The underlying message communication system does not provide delivery acknowledgement)J
72 260 :M
1.076 .108(either. The acknowledgement that the originator of a write request needs is that the data was)J
72 274 :M
.961 .096(stored safely. This acknowledgement can be provided only by high levels of the SWALLOW)J
72 288 :M
2.428 .243(system. For read requests, a delivery acknowledgement is redundant, since the response)J
72 302 :M
4.614 .461(containing the value read is sufficient acknowledgement. By eliminating delivery)J
72 316 :M
.653 .065(acknowledgements, the number of messages transmitted is halved. This message reduction can)J
72 330 :M
.287 .029(have a significant effect on both host load and network load, improving performance. This same)J
72 344 :M
1.281 .128(line of reasoning has also been used in development of an experimental protocol for remote)J
72 358 :M
1.077 .108(access to disk records[6]. The resulting reduction in path length in lower-level protocols was)J
72 372 :M
(important in maintaining good performance on remote disk access.)S
72 398 :M
f1_14 sf
(Identifying the ends)S
72 417 :M
f2_12 sf
3.442 .344(Using the end-to-end argument sometimes requires subtlety of analyis of application)J
72 431 :M
1.73 .173(requirements. For example, consider a computer communication network that carries some)J
72 445 :M
2.24 .224(packet voice connections, conversations between digital telephone instruments. For those)J
72 459 :M
1.059 .106(connections that carry voice packets, an unusually strong version of the end-to-end argument)J
72 473 :M
.202 .02(applies: if low levels of the communication system try to accomplish bit-perfect communication,)J
72 487 :M
.53 .053(they will probably introduce uncontrolled delays in packet delivery, for example, by requesting)J
72 501 :M
1.037 .104(retransmission of damaged packets and holding up delivery of later packets until earlier ones)J
72 515 :M
1.196 .12(have been correctly retransmitted. Such delays are disruptive to the voice application, which)J
72 529 :M
.179 .018(needs to feed data at a constant rate to the listener. It is better to accept slightly damaged packets)J
72 543 :M
.642 .064(as they are, or even to replace them with silence, a duplicate of the previous packet, or a noise)J
72 557 :M
.105 .011(burst. The natural redundancy of voice, together with the high-level error correction procedure in)J
72 571 :M
1.042 .104(which one participant says "excuse me, someone dropped a glass. Would you please say that)J
72 585 :M
(again?" will handle such dropouts, if they are relatively infrequent.)S
72 604 :M
.241 .024(However, this strong version of the end-to-end argument is a property of the specific application)J
72 618 :M
.352 .035(\320 two people in real-time conversation \320 rather than a property, say, of speech in general. If one)J
72 632 :M
.884 .088(considers instead a speech message system, in which the voice packets are stored in a file for)J
72 646 :M
1.456 .146(later listening by the recipient, the arguments suddenly change their nature. Short delays in)J
72 660 :M
.052 .005(delivery of packets to the storage medium are not particularly disruptive so there is no longer any)J
72 674 :M
2.105 .21(objection to low-level reliability measures that might introduce delay in order to achieve)J
72 688 :M
.742 .074(reliability. More important, it is actually helpful to this application to get as much accuracy as)J
72 702 :M
.399 .04(possible in the recorded message, since the recipient, at the time of listening to the recording, is)J
72 716 :M
.954 .095(not going to be able to ask the sender to repeat a sentence. On the other hand, with a storage)J
72 730 :M
.974 .097(system acting as the receiving end of the voice communication, an end-to-end argument does)J
72 744 :M
1.369 .137(apply to packet ordering and duplicate suppression. Thus the end-to-end argument is not an)J
72 758 :M
.748 .075(absolute rule, but rather a guideline that helps in application and protocol design analysis; one)J
72 772 :M
(must use some care to identify the end points to which the argument should be applied.)S
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(George Coulouris; page: 8 of 10)setjob
%%EndPageSetup
-29 -30 :T
gS 29 30 538 781 rC
72 53 :M
f0_10 sf
(SALTZER ET AL.)S
210 53 :M
(End-to-End Arguments in System Design)S
516 53 :M
(8)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
70 60.24 -.24 .24 543.24 60 .24 70 60 @a
72 83 :M
f1_14 sf
(History, and application to other system areas)S
72 102 :M
f2_12 sf
.485 .048(The individual examples of end-to-end arguments cited in this paper are not original; they have)J
72 116 :M
3.573 .357(accumulated over the years. The first example of questionable intermediate delivery)J
72 130 :M
1.32 .132(acknowledgements noticed by the authors was the "wait" message of the M.I.T. Compatible)J
72 144 :M
.143 .014(Time-Sharing System, which the system printed on the user's terminal whenever the user entered)J
72 158 :M
.374 .037(a command[3]. \(The message had some value in the early days of the system, when crashes and)J
72 172 :M
1.075 .107(communication failures were so frequent that intermediate acknowledgements provided some)J
72 186 :M
(needed reassurance that all was well.\))S
72 205 :M
1.071 .107(The end-to-end argument relating to encryption was first publicly discussed by Branstad in a)J
72 219 :M
.942 .094(1973 paper[2]; presumably the military security community held classified discussions before)J
72 233 :M
2.227 .223(that time. Diffie and Hellman[4] and Kent[8] develop the arguments in more depth, and)J
72 247 :M
(Needham and Schroeder[11] devised improved protocols for the purpose.)S
72 266 :M
.068 .007(The two-phase-commit data update protocols of Gray[5], Lampson and Sturgis[10] and Reed[13])J
72 280 :M
-.003(all use a form of end-to-end argument to justify their existence; they are end-to-end protocols that)A
72 294 :M
.782 .078(do not depend for correctness on reliability, FIFO sequencing, or duplicate suppression within)J
72 308 :M
.533 .053(the communication system, since all of these problems may also be introduced by other system)J
72 322 :M
1.024 .102(component failures as well. Reed makes this argument explicitly in the second chapter of his)J
72 336 :M
(Ph.D. thesis on decentralized atomic actions[14].)S
72 355 :M
.578 .058(End-to-end arguments are often applied to error control and correctness in application systems.)J
72 369 :M
.874 .087(For example, a banking system usually provides high-level auditing procedures as a matter of)J
72 383 :M
.566 .057(policy and legal requirement. Those high-level auditing procedures will uncover not only high)J
537 383 :M
(-)S
72 397 :M
.992 .099(level mistakes such as performing a withdrawal against the wrong account, it will also detect)J
72 411 :M
1.725 .173(low-level mistakes such as coordination errors in the underlying data management system.)J
72 425 :M
.156 .016(Therefore a costly algorithm that absolutely eliminates such coordination errors may be arguably)J
72 439 :M
1.313 .131(less appropriate than a less costly algorithm that just makes such errors very rare. In airline)J
72 453 :M
1.246 .125(reservation systems, an agent can be relied upon to keep trying, through system crashes and)J
72 467 :M
1.064 .106(delays, until a reservation is either confirmed or refused. Lower level recovery procedures to)J
72 481 :M
.451 .045(guarantee that an unconfirmed request for a reservation will survive a system crash are thus not)J
72 495 :M
.409 .041(vital. In telephone exchanges, a failure that could cause a single call to be lost is considered not)J
72 509 :M
2.122 .212(worth providing explicit recovery for, since the caller will probably replace the call if it)J
72 523 :M
1.741 .174(matters[7]: All of these design approaches are examples of the end-to-end argument being)J
72 537 :M
(applied to automatic recovery.)S
72 556 :M
1.233 .123(Much of the debate in the network protocol community over datagrams, virtual circuits, and)J
72 570 :M
.016 .002(connectionless protocols is a debate about end-to-end arguments. A modularity argument prizes a)J
72 584 :M
-.003(reliable, FIFO sequenced, duplicate-suppressed stream of data as a system component that is easy)A
72 598 :M
1.59 .159(to build on, and that argument favors virtual circuits. The end-to-end argument claims that)J
72 612 :M
.388 .039(centrally-provided versions of each of those functions will be incomplete for some applications,)J
72 626 :M
.333 .033(and those applications will find it easier to build their own version of the functions starting with)J
72 640 :M
(datagrams.)S
72 659 :M
.317 .032(A version of the end-to-end argument in a non-communication application was developed in the)J
72 673 :M
1.712 .171(1950's by system analysts whose responsibility included reading and writing files on large)J
72 687 :M
1.33 .133(numbers of magnetic tape reels. Repeated attempts to define and implement a "reliable tape)J
72 701 :M
1.602 .16(subsystem" repeatedly foundered, as flaky tape drives, undependable system operators, and)J
72 715 :M
.05 .005(system crashes conspired against all narrowly focused reliability measures. Eventually, it became)J
72 729 :M
1.418 .142(standard practice for every application to provide its own application-dependent checks and)J
72 743 :M
.195 .02(recovery strategy; and to assume that lower-level error detection mechanisms at best reduced the)J
72 757 :M
1.138 .114(frequency with which the higher-level checks failed. As an example, the Multics file backup)J
72 771 :M
1.077 .108(system[17], even though it is built on a foundation of a magnetic tape subsystem format that)J
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(George Coulouris; page: 9 of 10)setjob
%%EndPageSetup
-29 -30 :T
gS 29 30 538 781 rC
72 53 :M
f0_10 sf
(SALTZER ET AL.)S
210 53 :M
(End-to-End Arguments in System Design)S
516 53 :M
(9)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
70 60.24 -.24 .24 543.24 60 .24 70 60 @a
72 81 :M
f2_12 sf
.416 .042(provides very powerful error detection and correction features, provides its own error control in)J
72 95 :M
(the form of record labels and multiple copies of every file.)S
72 114 :M
.524 .052(The arguments that are used in support of reduced instruction set computer \(RISC\) architecture)J
72 128 :M
.136 .014(are similar to end-to-end arguments. The RISC argument is that the client of the architecture will)J
72 142 :M
.031 .003(get better performance by implementing exactly the instructions needed from primitive tools; any)J
72 156 :M
.81 .081(attempt by the computer designer to anticipate the client's requirements for an esoteric feature)J
72 170 :M
1.349 .135(will probably miss the target slightly and the client will end up reimplementing that feature)J
72 184 :M
(anyway. \(We are indebted to M. Satyanarayanan for pointing out this example.\))S
72 203 :M
.291 .029(Lampson, in his arguments supporting the "open operating system,"[9] uses an argument similar)J
72 217 :M
1.09 .109(to the end-to-end argument as a justification. Lampson argues against making any function a)J
72 231 :M
.046 .005(permanent fixture of lower-level modules; the function may be provided by a lower-level module)J
72 245 :M
1.508 .151(but it should always be replaceable by an application's special version of the function. The)J
72 259 :M
.726 .073(reasoning is that for any function you can think of, at least some applications will find that by)J
72 273 :M
1.354 .135(necessity they must implement the function themselves in order to meet correctly their own)J
72 287 :M
.747 .075(requirements. This line of reasoning leads Lampson to propose an "open" system in which the)J
72 301 :M
-.01(entire operating system consists of replaceable routines from a library. Such an approach has only)A
72 315 :M
.245 .025(recently become feasible in the context of computers dedicated to a single application. It may be)J
72 329 :M
1.511 .151(the case that the large quantity of fixed supervisor function typical of large-scale operating)J
72 343 :M
1.538 .154(systems is only an artifact of economic pressures that demanded multiplexing of expensive)J
72 357 :M
.851 .085(hardware and therefore a protected supervisor. Most recent system "kernelization" projects, in)J
72 371 :M
.764 .076(fact, have focused at least in part on getting function out of low system levels[16,12]. Though)J
72 385 :M
.82 .082(this function movement is inspired by a different kind of correctness argument, it has the side)J
72 399 :M
.696 .07(effect of producing an operating system that is more flexible for applications, which is exactly)J
72 413 :M
(the main thrust of the end-to-end argument.)S
72 439 :M
f1_14 sf
(Conclusions)S
72 458 :M
f2_12 sf
.347 .035(End-to-end arguments are a kind of "Occam's razor" when it comes to choosing the functions to)J
72 472 :M
.131 .013(be provided in a communication subsystem. Because the communication subsystem is frequently)J
72 486 :M
.444 .044(specified before applications that use the subsystem are known, the designer may be tempted to)J
72 500 :M
.28 .028("help" the users by taking on more function than necessary. Awareness of end-to-end arguments)J
72 514 :M
(can help to reduce such temptations.)S
72 533 :M
.274 .027(It is fashionable these days to talk about "layered" communication protocols, but without clearly)J
72 547 :M
2.049 .205(defined criteria for assigning functions to layers. Such layerings are desirable to enhance)J
72 561 :M
1.529 .153(modularity. End-to-end arguments may be viewed as part of a set of rational principles for)J
72 575 :M
1.352 .135(organizing such layered systems. We hope that our discussion will help to add substance to)J
72 589 :M
(arguments about the "proper" layering.)S
72 615 :M
f1_14 sf
(Acknowledgements)S
72 634 :M
f2_12 sf
1.853 .185(Many people have read and commented on an earlier draft of this paper, including David)J
72 648 :M
1.355 .136(Cheriton, F.B. Schneider, and Liba Svobodova. The subject was also discussed at the ACM)J
72 662 :M
.138 .014(Workshop in Fundamentals of Distributed Computing, in Fallbrook, California during December)J
72 676 :M
(1980. Those comments and discussions were quite helpful in clarifying the arguments.)S
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(George Coulouris; page: 10 of 10)setjob
%%EndPageSetup
-29 -30 :T
gS 29 30 538 781 rC
72 53 :M
f0_10 sf
(SALTZER ET AL.)S
210 53 :M
(End-to-End Arguments in System Design)S
511 53 :M
(10)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
70 60.24 -.24 .24 543.24 60 .24 70 60 @a
72 83 :M
f1_14 sf
(References)S
72 101 :M
f2_12 sf
(1.)S
94 101 :M
.234 .023(Bolt Beranek and Newman Inc. Specifications for the interconnection of a host and an IMP.)J
94 115 :M
(Technical Report No. 1822, Cambridge, Mass., December, 1981.)S
72 133 :M
(2.)S
94 133 :M
1.351 .135(Branstad, D.K. Security aspects of computer networks. AIAA Paper No. 73-427, AIAA)J
94 147 :M
(Computer Network Systems Conference, Huntsville, Alabama, April, 1973.)S
72 165 :M
(3.)S
94 165 :M
.896 .09(Corbato, F.J., et al. )J
194 165 :M
f3_12 sf
.734 .073(The Compatible Time-Sharing System, A Programmer's Guide)J
f2_12 sf
.617 .062(. M.I.T.)J
94 179 :M
(Press, Cambridge, Massachusetts, 1963, p.10.)S
72 197 :M
(4.)S
94 197 :M
1.902 .19(Diffie, W., and Hellman, M.E. New directions in cryptography. )J
431 197 :M
f3_12 sf
1.954 .195(IEEE Trans. on Info.)J
94 211 :M
(Theory)S
128 211 :M
f2_12 sf
(, IT-22, 6, \(November, 1976\), pp.644-654.)S
72 229 :M
(5.)S
94 229 :M
.07 .007(Gray, J.N. Notes on database operating systems. In )J
f3_12 sf
.095 .009(Operating System: An Advanced Course)J
f2_12 sf
(.)S
94 243 :M
(Volume 60 of )S
164 243 :M
f3_12 sf
(Lecture Notes in Computer Science)S
334 243 :M
f2_12 sf
(, Springer-Verlag, 1978, pp.393-481.)S
72 261 :M
(6.)S
94 261 :M
.177 .018(Greenwald, M. Remote virtual disk protocol specifications. M.I.T. Laboratory for Computer)J
94 275 :M
(Science Technical Memorandum, in preparation. Expected publication, 1984.)S
72 293 :M
(7.)S
94 293 :M
1 .1(Keister, W., Ketchledge, R.W., and Vaughan, H.E.: No. 1 ESS: System organization and)J
94 307 :M
(objectives. )S
149 307 :M
f3_12 sf
(Bell System Technical Journal 53)S
f2_12 sf
(, 5 \(part 1\), \(September, 1964\) p. 1841.)S
72 325 :M
(8.)S
94 325 :M
4.324 .432(Kent, S.T.: Encryption-based protection protocols for interactive user-computer)J
94 339 :M
2.643 .264(communication.: S.M. thesis, Massachusetts Institute of Technology, Department of)J
94 353 :M
2.644 .264(Electrical Engineering and Computer Science, May, 1976. Also available as M.I.T.)J
94 367 :M
(Laboratory for Computer Science Technical Report, TR-162, May, 1976.)S
72 385 :M
(9.)S
94 385 :M
1.278 .128(Lampson, B.W., and Sproull, R.F. An open operating system for a single-user machine.)J
94 399 :M
f3_12 sf
.52 .052(Proc. Seventh Symposium on Operating Systems Principles, Operating Systems Review 13)J
f2_12 sf
(,)S
94 413 :M
(Special issue \(December, 1979\), pp.98-105.)S
72 431 :M
(10.)S
94 431 :M
.457 .046(Lampson, B., and Sturgis, H: Crash recovery in a distributed data storage system. Working)J
94 445 :M
(paper, Xerox PARC, November, 1976 and April, 1979. Submitted to )S
427 445 :M
f3_12 sf
(CACM)S
f2_12 sf
(.)S
72 463 :M
(11.)S
94 463 :M
(Needham, R.M., and Schroeder, M.D.: Using encryption for authentication in large networks)S
94 477 :M
(of computers. )S
163 477 :M
f3_12 sf
(CACM 21)S
f2_12 sf
(, 12, \(December, 1978\), pp.993-999.)S
72 495 :M
(12.)S
94 495 :M
(Popek, G.J., et al.: UCLA data secure unix. )S
305 495 :M
f3_12 sf
(Proc. 1979 NCC)S
f2_12 sf
(, AFIPS Press, pp.355-364.)S
72 513 :M
(13.)S
94 513 :M
1.629 .163(Reed, D.P.: Implementing atomic actions on decentralized data. )J
f3_12 sf
2.102 .21(ACM Transactions on)J
94 527 :M
(Computer Systems 1)S
192 527 :M
f2_12 sf
(, 1 \(February, 1983\), pp.3-23.)S
72 545 :M
(14.)S
94 545 :M
.54 .054(Reed, D.P.: Naming and synchronization in a decentralized computer system. Ph.D. thesis,)J
94 559 :M
.226 .023(Massachusetts Institute of Technology, Department of Electrical Engineering and Computer)J
94 573 :M
2.13 .213(Science, September 1978. Also available as M.I.T. Laboratory for Computer Science)J
94 587 :M
(Technical Report, TR-205, September, 1978.)S
72 605 :M
(15.)S
94 605 :M
.574 .057(Reed, D.P., and Svobodova, L.: SWALLOW: A distributed data storage system for a local)J
94 619 :M
.932 .093(network. In West, A., and Janson, P., ed. )J
304 619 :M
f3_12 sf
.687 .069(Local Networks for Computer Communications,)J
94 633 :M
.34 .034(Proc. IFIP Working Group 6.4 International Workshop on Local Networks)J
f2_12 sf
.478 .048(. North-Holland,)J
94 647 :M
(Amsterdam, 1981, pp.355-373.)S
72 665 :M
(16.)S
94 665 :M
.873 .087(Schroeder, M.D., Clark, D.D., and Saltzer, J.H.: The Multics kernel design project. )J
f3_12 sf
.292(Proc.)A
94 679 :M
2.529 .253(Sixth Symposium on Operating Systems Principles, Operating Systems Review 11)J
f2_12 sf
1.073 .107(, 5)J
94 693 :M
(\(November, 1977,\) pp.43-56.)S
72 711 :M
(17.)S
94 711 :M
.665 .066(Stern, J.A.: Backup and recovery of on-line information in a computer utility. S.M. thesis,)J
94 725 :M
.018 .002(M.I.T. Department of Electrical Engineering and Computer Science, August 1973. Available)J
94 739 :M
(as M.I.T. Project MAC Technical Report TR-116, January, 1974.)S
endp
%%Trailer
end
%%EOF
